(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     55809,       1348]
NotebookOptionsPosition[     54886,       1319]
NotebookOutlinePosition[     55254,       1335]
CellTagsIndexPosition[     55211,       1332]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "KnotTheory`"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"8329f3ee-e492-43e2-9659-14304a29f911"],

Cell[BoxData["\<\"Loading KnotTheory` version of September 6, 2014, \
13:37:37.2841.\\nRead more at http://katlas.org/wiki/KnotTheory.\"\>"], \
"Print",
 CellChangeTimes->{
  3.822056063832604*^9, {3.8353543865060053`*^9, 3.835354394710319*^9}},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a551b381-3244-428d-9edb-c1f30c207115"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"intList", "[", "x_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "order", ",", "newList"}], "}"}], ",", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"order", "=", 
        RowBox[{"Ordering", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newList", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"jjj", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"newList", "[", 
           RowBox[{"[", 
            RowBox[{"order", "[", 
             RowBox[{"[", "jjj", "]"}], "]"}], "]"}], "]"}], "=", "jjj"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"jjj", ",", "1", ",", "n"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "newList"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"preCrossingSign", "[", "preCrossing_", "]"}], ":=", 
    RowBox[{"Sign", "[", 
     RowBox[{
      RowBox[{"preCrossing", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"preCrossing", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"preCrossing", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", 
        RowBox[{"preCrossing", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pairSign", "[", "pair_", "]"}], ":=", 
    RowBox[{"Sign", "[", 
     RowBox[{
      RowBox[{"pair", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"pair", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"midPoint", "[", "preCrossing_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mainPair", ",", "secondaryPair", ",", "sign"}], "}"}], ",", 
      RowBox[{
       RowBox[{"mainPair", "=", 
        RowBox[{"preCrossing", "[", 
         RowBox[{"[", 
          RowBox[{";;", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"secondaryPair", "=", 
        RowBox[{"preCrossing", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sign", "=", 
        RowBox[{"preCrossingSign", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"mainPair", ",", "secondaryPair"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sign", "*", 
        RowBox[{"Max", "[", 
         RowBox[{"sign", "*", "secondaryPair"}], "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"preCrossingOrderValue", "[", "preCrossing_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mainPair", ",", "secondaryPair", ",", "mainPairDistance"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"mainPair", "=", 
        RowBox[{"preCrossing", "[", 
         RowBox[{"[", 
          RowBox[{";;", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"secondaryPair", "=", 
        RowBox[{"preCrossing", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mainPairDistance", "=", 
        RowBox[{
         RowBox[{"pairSign", "[", "mainPair", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mainPair", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"mainPair", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pairSign", "[", "mainPair", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"midPoint", "[", "preCrossing", "]"}], "+", 
          RowBox[{"Max", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "mainPairDistance"}], "*", 
             RowBox[{"Sign", "[", 
              RowBox[{
               RowBox[{"mainPair", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"mainPair", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"secondaryPair", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"secondaryPair", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
         ")"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"petalToStem", "[", "petalPermutation_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oneIndex", ",", "stemPermutation"}], "}"}], ",", 
      RowBox[{
       RowBox[{"oneIndex", "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"petalPermutation", ",", "1"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"stemPermutation", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"petalPermutation", "[", 
           RowBox[{"[", 
            RowBox[{"oneIndex", ";;"}], "]"}], "]"}], ",", 
          RowBox[{"petalPermutation", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"oneIndex", "-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "stemPermutation"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"biggerThan", "[", 
     RowBox[{"value_", ",", "comparisonList_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "totalList", "}"}], ",", 
      RowBox[{
       RowBox[{"totalList", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "value", "}"}], ",", "comparisonList"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"totalList", "=", 
        RowBox[{"Sort", "[", "totalList", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"totalList", ",", "value"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"removePDKinks", "[", "codePD_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "PD1", ",", "finalPD", ",", "elements", ",", "a", ",", "b", ",", "c", 
        ",", "n", ",", "jjj"}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "codePD", "]"}], "\[LessEqual]", "2"}], ",", 
         
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"finalPD", "=", "codePD"}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "finalPD", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jjj", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"jjj", "\[LessEqual]", "n"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "finalPD", "]"}], "\[GreaterEqual]", 
           "3"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"finalPD", "[", 
               RowBox[{"[", "jjj", "]"}], "]"}], "]"}], "]"}], "<", "4"}], 
           ",", 
           RowBox[{
            RowBox[{"elements", "=", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"finalPD", "[", 
               RowBox[{"[", "jjj", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"a", "=", 
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"finalPD", "[", 
                RowBox[{"[", "jjj", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"b", "=", 
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"finalPD", "[", 
                RowBox[{"[", "jjj", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"c", "=", 
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"finalPD", "[", 
                RowBox[{"[", "jjj", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"finalPD", "=", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"finalPD", ",", 
               RowBox[{"finalPD", "[", 
                RowBox[{"[", "jjj", "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"elements", ",", 
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "mmm"}], "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "mmm"}], "]"}], "]"}], "=", 
                   RowBox[{"Min", "[", "elements", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "mmm"}], "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "mmm"}], "]"}], "]"}], "+", 
                    RowBox[{"Min", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"biggerThan", "[", 
                    RowBox[{
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "mmm"}], "]"}], "]"}], ",", 
                    "elements"}], "]"}]}], "+", "1"}]}], "]"}]}]}]}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"mmm", ",", "1", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", "iii", "]"}], "]"}], "]"}]}], "}"}]}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"iii", ",", "1", ",", 
                RowBox[{"Length", "[", "finalPD", "]"}]}], "}"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"n", "--"}]}], ",", 
           RowBox[{"jjj", "++"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "finalPD", "]"}], "\[LessEqual]", "2"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "finalPD"}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"removeAllR1", "[", "pdCode_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"finalPD", ",", "n"}], "}"}], ",", 
      RowBox[{
       RowBox[{"finalPD", "=", "pdCode"}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", "finalPD", "]"}], "+", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "finalPD", "]"}], "<", "n"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "finalPD", "]"}], "\[GreaterEqual]", 
           "3"}]}], ",", 
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"Length", "[", "finalPD", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"finalPD", "=", 
           RowBox[{"removePDKinks", "[", "finalPD", "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "finalPD", "]"}], "\[LessEqual]", "2"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "finalPD"}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"removeR2", "[", "codePD_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "PD1", ",", "finalPD", ",", "jjj", ",", "iii", ",", "n", ",", 
        "elements", ",", "underStrand", ",", "overStrand", ",", "r2Removed"}],
        "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "codePD", "]"}], "\[LessEqual]", "2"}], ",", 
         
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"finalPD", "=", 
        RowBox[{"removeAllR1", "[", "codePD", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "finalPD", "]"}], "\[LessEqual]", "2"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "finalPD", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"jjj", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"jjj", "\[LessEqual]", "n"}], ",", 
         RowBox[{
          RowBox[{"iii", "=", 
           RowBox[{"jjj", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"iii", "\[LessEqual]", "n"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Intersection", "[", 
                  RowBox[{
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", "iii", "]"}], "]"}], ",", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", "jjj", "]"}], "]"}]}], "]"}], "]"}], 
                "\[GreaterEqual]", "2"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"finalPD", "[", 
                   RowBox[{"[", 
                    RowBox[{"iii", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"finalPD", "[", 
                   RowBox[{"[", 
                    RowBox[{"jjj", ",", "3"}], "]"}], "]"}]}], "||", 
                 RowBox[{
                  RowBox[{"finalPD", "[", 
                   RowBox[{"[", 
                    RowBox[{"iii", ",", "3"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"finalPD", "[", 
                   RowBox[{"[", 
                    RowBox[{"jjj", ",", "1"}], "]"}], "]"}]}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"underStrand", "=", 
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"jjj", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"jjj", ",", "3"}], "]"}], "]"}], ",", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}]}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"overStrand", "=", 
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"jjj", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"jjj", ",", "4"}], "]"}], "]"}], ",", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"iii", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"elements", "=", 
                RowBox[{"DeleteDuplicates", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"DeleteCases", "[", 
                    RowBox[{"underStrand", ",", 
                    RowBox[{"Min", "[", "underStrand", "]"}]}], "]"}], ",", 
                   RowBox[{"DeleteCases", "[", 
                    RowBox[{"overStrand", ",", 
                    RowBox[{"Min", "[", "overStrand", "]"}]}], "]"}]}], "]"}],
                  "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"finalPD", "=", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{"finalPD", ",", 
                  RowBox[{"finalPD", "[", 
                   RowBox[{"[", "iii", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"finalPD", "=", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{"finalPD", ",", 
                  RowBox[{"finalPD", "[", 
                   RowBox[{"[", "jjj", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"overStrand", ",", 
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"kkk", ",", "mmm"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"kkk", ",", "mmm"}], "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"Min", "[", "overStrand", "]"}], "+", 
                    RowBox[{"Min", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"biggerThan", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", "overStrand", "]"}], ",", 
                    "underStrand"}], "]"}]}], "+", "1"}]}], "]"}]}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"underStrand", ",", 
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"kkk", ",", "mmm"}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"kkk", ",", "mmm"}], "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"Min", "[", "underStrand", "]"}], "+", 
                    RowBox[{"Min", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"biggerThan", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", "underStrand", "]"}], ",", 
                    "overStrand"}], "]"}]}], "+", "1"}]}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"kkk", ",", "mmm"}], "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"kkk", ",", "mmm"}], "]"}], "]"}], "-", 
                    RowBox[{"biggerThan", "[", 
                    RowBox[{
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", 
                    RowBox[{"kkk", ",", "mmm"}], "]"}], "]"}], ",", 
                    "elements"}], "]"}]}]}]}], "]"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"mmm", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"finalPD", "[", 
                    RowBox[{"[", "kkk", "]"}], "]"}], "]"}]}], "}"}]}], "]"}],
                  ",", 
                 RowBox[{"{", 
                  RowBox[{"kkk", ",", "1", ",", 
                   RowBox[{"Length", "[", "finalPD", "]"}]}], "}"}]}], "]"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "finalPD", "]"}], "\[LessEqual]", 
                  "2"}], ",", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", "}"}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"finalPD", "=", 
                RowBox[{"removeAllR1", "[", "finalPD", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "finalPD", "]"}], "\[LessEqual]", 
                  "2"}], ",", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", "}"}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"n", "=", 
                RowBox[{"Length", "[", "finalPD", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"jjj", "=", "1"}], ";", "\[IndentingNewLine]", 
               RowBox[{"iii", "=", 
                RowBox[{"jjj", "+", "1"}]}]}], ",", 
              RowBox[{"iii", "++"}]}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"jjj", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "finalPD"}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simplifyPDCode", "[", "pdCode_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"finalPD", ",", "n"}], "}"}], ",", 
      RowBox[{
       RowBox[{"finalPD", "=", "pdCode"}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", "finalPD", "]"}], "+", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "finalPD", "]"}], "<", "n"}], ",", 
         RowBox[{
          RowBox[{"n", "=", 
           RowBox[{"Length", "[", "finalPD", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"finalPD", "=", 
             RowBox[{"removeAllR1", "[", "finalPD", "]"}]}], ";"}], "*)"}], 
          RowBox[{"finalPD", "=", 
           RowBox[{"removeR2", "[", "finalPD", "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "finalPD"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"permutationToPD", "[", "floatPermutation_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "permutation", ",", "crossingCounter", ",", "sideCounter", ",", 
        "preCrossingSubList", ",", "mainPair", ",", "secondaryPair", ",", 
        "key", ",", "reverseKey", ",", "crossingList", ",", "preCrossingList",
         ",", "preCrossInfo", ",", "w", ",", "preCrossCopy", ",", "n"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Length", "[", "floatPermutation", "]"}], ",", "2"}], 
           "]"}], "\[NotEqual]", "1"}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<The length of the permutation should be odd.\>\"", "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "4", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"permutation", "=", 
        RowBox[{"intList", "[", "floatPermutation", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"permutation", "=", 
        RowBox[{"petalToStem", "[", "permutation", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "permutation", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"preCrossingList", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"crossingList", "=", 
        RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"crossingCounter", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sideCounter", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"preCrossingSubList", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"mainPair", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"permutation", "[", 
              RowBox[{"[", 
               RowBox[{"jjj", "+", "1"}], "]"}], "]"}], ",", 
             RowBox[{"permutation", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"jjj", "+", "1"}], ",", "n"}], "]"}], "+", "1"}], 
               "]"}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"secondaryPair", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"permutation", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"jjj", "+", "2", "+", 
                    RowBox[{"2", "*", "iii"}]}], ",", "n"}], "]"}], "+", 
                   "1"}], "]"}], "]"}], ",", 
                RowBox[{"permutation", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"jjj", "+", "3", "+", 
                    RowBox[{"2", "*", "iii"}]}], ",", "n"}], "]"}], "+", 
                   "1"}], "]"}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"mainPair", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"secondaryPair", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"mainPair", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                   RowBox[{"secondaryPair", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"mainPair", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"secondaryPair", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"mainPair", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                   RowBox[{"secondaryPair", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "\[LessEqual]",
                 "0"}], ",", 
               RowBox[{
                RowBox[{"key", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"mainPair", ",", "secondaryPair"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"reverseKey", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"secondaryPair", ",", "mainPair"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"Not", "[", 
                   RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"crossingList", ",", "reverseKey"}], "]"}], "]"}],
                   ",", 
                  RowBox[{
                   RowBox[{"crossingList", "[", "key", "]"}], "=", 
                   RowBox[{"{", "sideCounter", "}"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"preCrossingSubList", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"preCrossingSubList", ",", 
                   RowBox[{"{", 
                    RowBox[{"Join", "[", 
                    RowBox[{"mainPair", ",", "secondaryPair"}], "]"}], 
                    "}"}]}], "]"}]}]}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"iii", ",", "0", ",", 
              RowBox[{
               RowBox[{"n", "/", "2"}], "-", "2"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"preCrossingSubList", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"preCrossingSubList", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"preCrossingOrderValue", "[", "#1", "]"}], "<", 
               RowBox[{"preCrossingOrderValue", "[", "#2", "]"}]}], "&"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"preCrossingList", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"preCrossingList", ",", "preCrossingSubList"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"sideCounter", "=", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"sideCounter", "+", "1"}], ",", "2"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"jjj", ",", "0", ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"key", "=", "preCross"}], ";", "\[IndentingNewLine]", 
          RowBox[{"reverseKey", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"preCross", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"3", ",", "4"}], "}"}], "]"}], "]"}], ",", 
             RowBox[{"preCross", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"KeyExistsQ", "[", 
             RowBox[{"crossingList", ",", "key"}], "]"}], ",", 
            RowBox[{
             RowBox[{"crossingList", "[", "key", "]"}], "=", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"crossingList", "[", "key", "]"}], ",", 
               "crossingCounter"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"crossingList", "[", "reverseKey", "]"}], "=", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"crossingList", "[", "reverseKey", "]"}], ",", 
               "crossingCounter"}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"crossingCounter", "++"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"preCross", ",", "preCrossingList"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"preCrossingList", "=", 
        RowBox[{"Keys", "[", "crossingList", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"key", "=", 
           RowBox[{"preCrossingList", "[", 
            RowBox[{"[", "jjj", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"preCrossInfo", "=", 
           RowBox[{"crossingList", "[", "key", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"w", "=", 
           RowBox[{
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"preCrossingList", "[", 
                 RowBox[{"[", 
                  RowBox[{"jjj", ",", "2"}], "]"}], "]"}], "-", 
                RowBox[{"preCrossingList", "[", 
                 RowBox[{"[", 
                  RowBox[{"jjj", ",", "1"}], "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"preCrossingList", "[", 
                 RowBox[{"[", 
                  RowBox[{"jjj", ",", "4"}], "]"}], "]"}], "-", 
                RowBox[{"preCrossingList", "[", 
                 RowBox[{"[", 
                  RowBox[{"jjj", ",", "3"}], "]"}], "]"}]}], ")"}]}], "]"}], 
            "+", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", "3"}], "]"}], "]"}], "+", 
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", "4"}], "]"}], "]"}], "-", 
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", "1"}], "]"}], "]"}], "-", 
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"preCrossingList", "[", 
            RowBox[{"[", 
             RowBox[{"jjj", ",", "1"}], "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"preCrossInfo", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "crossingCounter"}], 
              "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"preCrossingList", "[", 
            RowBox[{"[", 
             RowBox[{"jjj", ",", "2"}], "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"preCrossInfo", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
               "crossingCounter"}], "]"}], ",", "1"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"preCrossingList", "[", 
            RowBox[{"[", 
             RowBox[{"jjj", ",", "3"}], "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"preCrossInfo", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", "crossingCounter"}], 
              "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"preCrossingList", "[", 
            RowBox[{"[", 
             RowBox[{"jjj", ",", "4"}], "]"}], "]"}], "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"preCrossInfo", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ",", 
               "crossingCounter"}], "]"}], ",", "1"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"preCrossInfo", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"preCrossCopy", "=", 
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", "jjj", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", "3"}], "]"}], "]"}], "=", 
              RowBox[{"preCrossCopy", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", 
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"1", "+", "w"}], ",", "4"}], "]"}], "+", "1"}]}], 
                "]"}], "]"}], "=", 
              RowBox[{"preCrossCopy", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", 
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"3", "-", "w"}], ",", "4"}], "]"}], "+", "1"}]}], 
                "]"}], "]"}], "=", 
              RowBox[{"preCrossCopy", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"preCrossCopy", "=", 
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", "jjj", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", "1"}], "]"}], "]"}], "=", 
              RowBox[{"preCrossCopy", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", "3"}], "]"}], "]"}], "=", 
              RowBox[{"preCrossCopy", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", 
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"1", "+", "w"}], ",", "4"}], "]"}], "+", "1"}]}], 
                "]"}], "]"}], "=", 
              RowBox[{"preCrossCopy", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"preCrossingList", "[", 
               RowBox[{"[", 
                RowBox[{"jjj", ",", 
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"3", "-", "w"}], ",", "4"}], "]"}], "+", "1"}]}], 
                "]"}], "]"}], "=", 
              RowBox[{"preCrossCopy", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"jjj", ",", "1", ",", 
           RowBox[{"Length", "[", "preCrossingList", "]"}]}], "}"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"simplifyPDCode", "[", "preCrossingList", "]"}]}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"convertExponents", "[", "string_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "stringTemp", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stringTemp", "=", "string"}], ";", "\[IndentingNewLine]", 
       RowBox[{"stringTemp", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"stringTemp", ",", 
          RowBox[{"\"\<e\>\"", "\[Rule]", "\"\<*^\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ToExpression", "[", "stringTemp", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"convertStringList", "[", "stringList_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"list", "=", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"StringDelete", "[", 
           RowBox[{"stringList", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<{\>\"", ",", "\"\<}\>\""}], "}"}]}], "]"}], ",", 
          "\"\<,\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{"convertExponents", "[", "list", "]"}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"coeffPairs", "[", 
     RowBox[{"pol_", ",", "x_Symbol"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"pol", ",", "x", ",", "#"}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"Exponent", "[", 
      RowBox[{"pol", ",", "x", ",", "List"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"insertActualInvariants", "[", 
    RowBox[{"fileName_", ",", 
     RowBox[{"maxPDLength_:", "60"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"file", "=", 
       RowBox[{"Import", "[", "fileName", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"file", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Input invariants\>\"", ",", "\"\<Petal permutation\>\"", ",", 
         "\"\<Actual invariants\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"petalPermutation", "[", "iii", "]"}], "=", 
          RowBox[{"convertStringList", "[", 
           RowBox[{"file", "[", 
            RowBox[{"[", 
             RowBox[{"iii", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PDCode", "[", "iii", "]"}], "=", 
          RowBox[{"permutationToPD", "[", 
           RowBox[{"petalPermutation", "[", "iii", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PDCode", "[", "iii", "]"}], "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{
            RowBox[{"PDCode", "[", "iii", "]"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"8", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"7", ",", "5", ",", "8", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"5", ",", "2", ",", "6", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", "2", ",", "7", ",", "1"}], "}"}]}], 
             "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"PDCode", "[", "iii", "]"}], "]"}], "\[LessEqual]", 
            "maxPDLength"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"jonesPolynomial", "[", "iii", "]"}], "=", 
             RowBox[{"Sort", "[", 
              RowBox[{
               RowBox[{"coeffPairs", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Jones", "[", 
                   RowBox[{"PD", "@@", 
                    RowBox[{"(", 
                    RowBox[{"X", "@@@", 
                    RowBox[{"PDCode", "[", "iii", "]"}]}], ")"}]}], "]"}], 
                  "[", "q", "]"}], ",", "q"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "<", 
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"jonesSpan", "[", "iii", "]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"jonesPolynomial", "[", "iii", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "-", 
              RowBox[{
               RowBox[{"jonesPolynomial", "[", "iii", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", 
            RowBox[{
             RowBox[{"jonesString", "[", "iii", "]"}], "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"jonesPolynomial", "[", "iii", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<[\>\""}], ",", 
                 RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<]\>\""}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"alexanderPolynomial", "[", "iii", "]"}], "=", 
             RowBox[{"Sort", "[", 
              RowBox[{
               RowBox[{"coeffPairs", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Alexander", "[", 
                   RowBox[{"PD", "@@", 
                    RowBox[{"(", 
                    RowBox[{"X", "@@@", 
                    RowBox[{"PDCode", "[", "iii", "]"}]}], ")"}]}], "]"}], 
                  "[", "q", "]"}], ",", "q"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "<", 
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"alexanderSpan", "[", "iii", "]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"alexanderPolynomial", "[", "iii", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "-", 
              RowBox[{
               RowBox[{"alexanderPolynomial", "[", "iii", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", 
            RowBox[{
             RowBox[{"alexanderString", "[", "iii", "]"}], "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"alexanderPolynomial", "[", "iii", "]"}], "]"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<[\>\""}], ",", 
                 RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<]\>\""}]}], "}"}]}], 
              "]"}]}], ";", 
            RowBox[{
             RowBox[{"signature", "[", "iii", "]"}], "=", 
             RowBox[{"KnotSignature", "[", 
              RowBox[{"PD", "@@", 
               RowBox[{"(", 
                RowBox[{"X", "@@@", 
                 RowBox[{"PDCode", "[", "iii", "]"}]}], ")"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"determinant", "[", "iii", "]"}], "=", 
             RowBox[{"KnotDet", "[", 
              RowBox[{"PD", "@@", 
               RowBox[{"(", 
                RowBox[{"X", "@@@", 
                 RowBox[{"PDCode", "[", "iii", "]"}]}], ")"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"actualInvariants", "[", "iii", "]"}], "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"jonesSpan", "[", "iii", "]"}], ",", 
               RowBox[{"alexanderSpan", "[", "iii", "]"}], ",", 
               RowBox[{"signature", "[", "iii", "]"}], ",", 
               RowBox[{"determinant", "[", "iii", "]"}], ",", 
               RowBox[{"jonesPolynomial", "[", "iii", "]"}], ",", 
               RowBox[{"alexanderPolynomial", "[", "iii", "]"}]}], "}"}]}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"actualInvariants", "[", "iii", "]"}], "=", 
            RowBox[{"{", "\"\<PD Code longer than maximum\>\"", "}"}]}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"file", "[", 
            RowBox[{"[", "iii", "]"}], "]"}], ",", 
           RowBox[{"actualInvariants", "[", "iii", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"iii", ",", "2", ",", 
          RowBox[{"Length", "[", "file", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newFileName", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"fileName", ",", "\"\<.\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         "\"\<_with_invariants.TSV\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{"newFileName", ",", "file"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.806692183187767*^9, 3.806692217714102*^9}, {
   3.8066923442213383`*^9, 3.806692432833358*^9}, {3.806693188248639*^9, 
   3.806693205837512*^9}, {3.8067137230183477`*^9, 3.806713783498146*^9}, {
   3.807012848093821*^9, 3.8070128756392612`*^9}, 3.807013234307382*^9, {
   3.807024897518283*^9, 3.8070249240459833`*^9}, {3.807025169402804*^9, 
   3.8070251722119226`*^9}, {3.807025701141345*^9, 3.807025704041209*^9}, {
   3.807026374845129*^9, 3.807026391495564*^9}, {3.8070311657627993`*^9, 
   3.807031170836101*^9}, {3.807034860680746*^9, 3.807034891154722*^9}, {
   3.807036740001927*^9, 3.8070367553916693`*^9}, {3.807036786355228*^9, 
   3.8070367894012003`*^9}, {3.807444689955591*^9, 3.8074446906417723`*^9}, {
   3.807444924921081*^9, 3.807445001129813*^9}, {3.807450568895599*^9, 
   3.8074505742808037`*^9}, {3.807450728264085*^9, 3.807450796675013*^9}, {
   3.807450978107209*^9, 3.807450996230196*^9}, {3.807451087908902*^9, 
   3.807451098370878*^9}, {3.8074511393000507`*^9, 3.807451199047308*^9}, {
   3.807472940364065*^9, 3.807473032936103*^9}, {3.807473263296212*^9, 
   3.8074733890039177`*^9}, {3.807473433543075*^9, 3.8074734515223513`*^9}, {
   3.807473489154891*^9, 3.807473565743904*^9}, {3.807473610352736*^9, 
   3.807473658365307*^9}, {3.8074754639051943`*^9, 3.8074755188611794`*^9}, {
   3.8074756853933983`*^9, 3.807475723437361*^9}, 3.8074758133596077`*^9, {
   3.807475888598647*^9, 3.8074759021767693`*^9}, {3.80748517112444*^9, 
   3.807485182777791*^9}, 3.8074853054023323`*^9, {3.80748616390405*^9, 
   3.807486240425179*^9}, {3.807486282804391*^9, 3.807486378847465*^9}, {
   3.807486426155759*^9, 3.807486456912353*^9}, {3.807487554951045*^9, 
   3.807487581801629*^9}, {3.8074933536897087`*^9, 3.807493409130847*^9}, {
   3.813590620568606*^9, 3.813590637805382*^9}, {3.813590835141025*^9, 
   3.813590835697616*^9}, {3.81359087649876*^9, 3.8135909010151577`*^9}, {
   3.81359111492869*^9, 3.813591184805787*^9}, {3.813592448332061*^9, 
   3.813592448557617*^9}, {3.8135925401488132`*^9, 3.813592614244082*^9}, {
   3.813592652270286*^9, 3.8135926970840816`*^9}, {3.8135927424515047`*^9, 
   3.813592755247118*^9}, {3.813592851513096*^9, 3.8135928581166477`*^9}, {
   3.8139478011735573`*^9, 3.8139478102513103`*^9}, {3.8139480153428497`*^9, 
   3.81394802119772*^9}, 3.813950994395143*^9, {3.822055579581052*^9, 
   3.822055585552408*^9}, {3.822055679503083*^9, 3.82205583881773*^9}, {
   3.822055922563816*^9, 3.822055953140139*^9}, 3.822056050905342*^9, {
   3.8220563496870832`*^9, 3.822056385721534*^9}, {3.822056431577112*^9, 
   3.822056446380663*^9}, {3.822057062531823*^9, 3.822057062607777*^9}, {
   3.822057150248411*^9, 3.822057185381825*^9}, {3.8220572305630407`*^9, 
   3.8220572538262453`*^9}, {3.8220573268648577`*^9, 3.822057330149744*^9}, {
   3.822059169966443*^9, 3.822059192658882*^9}, {3.822060268060506*^9, 
   3.822060268743394*^9}, {3.8220604482258167`*^9, 3.82206045010538*^9}, {
   3.8226903571181297`*^9, 3.822690357884589*^9}, 3.83535438200825*^9, {
   3.835355874227092*^9, 
   3.835355899845602*^9}},ExpressionUUID->"8fdccece-db1d-4189-abfd-\
40a07c2500b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<~/Dropbox/Coding/Knot ML/Jones polynomial generative \
ML/jones-polynomial-generative-ml/GAN Invariant Verification\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileName", "=", "\"\<num_invGANtest.csv\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"insertActualInvariants", "[", 
  RowBox[{"fileName", ",", "40"}], "]"}]}], "Input",
 CellChangeTimes->{{3.813590896073979*^9, 3.813590917474522*^9}, {
  3.8220602457456217`*^9, 3.822060252988661*^9}, {3.8353544159888697`*^9, 
  3.835354419931703*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"ec8a4f19-d03b-4d66-a080-05764a490682"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.813590953045295*^9, 3.813591245090777*^9, 
  3.8135926438044043`*^9, 3.813592730398278*^9, 3.813592828689169*^9, 
  3.813592939192092*^9, 3.813947980619478*^9, 3.813948599235471*^9, 
  3.813949883937736*^9, 3.835354604438896*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"77506a1d-dbcf-4901-912b-06f26da7a6b1"]
}, Open  ]]
},
WindowSize->{1632, 967},
WindowMargins->{{Automatic, 10}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 133, 2, 37, "Input",ExpressionUUID->"8329f3ee-e492-43e2-9659-14304a29f911"],
Cell[558, 19, 349, 7, 54, "Print",ExpressionUUID->"a551b381-3244-428d-9edb-c1f30c207115"]
}, Open  ]],
Cell[922, 29, 52881, 1261, 4250, "Input",ExpressionUUID->"8fdccece-db1d-4189-abfd-40a07c2500b5"],
Cell[CellGroupData[{
Cell[53828, 1294, 674, 15, 90, "Input",ExpressionUUID->"ec8a4f19-d03b-4d66-a080-05764a490682"],
Cell[54505, 1311, 365, 5, 42, "Output",ExpressionUUID->"77506a1d-dbcf-4901-912b-06f26da7a6b1"]
}, Open  ]]
}
]
*)

